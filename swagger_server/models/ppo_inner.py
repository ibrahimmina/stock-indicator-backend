# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
import re  # noqa: F401,E501
from swagger_server import util


class PpoInner(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, _date: str=None, ppo: float=None, hist: float=None, sig: float=None):  # noqa: E501
        """PpoInner - a model defined in Swagger

        :param _date: The _date of this PpoInner.  # noqa: E501
        :type _date: str
        :param ppo: The ppo of this PpoInner.  # noqa: E501
        :type ppo: float
        :param hist: The hist of this PpoInner.  # noqa: E501
        :type hist: float
        :param sig: The sig of this PpoInner.  # noqa: E501
        :type sig: float
        """
        self.swagger_types = {
            '_date': str,
            'ppo': float,
            'hist': float,
            'sig': float
        }

        self.attribute_map = {
            '_date': 'Date',
            'ppo': 'PPO',
            'hist': 'HIST',
            'sig': 'SIG'
        }
        self.__date = _date
        self._ppo = ppo
        self._hist = hist
        self._sig = sig

    @classmethod
    def from_dict(cls, dikt) -> 'PpoInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ppo_inner of this PpoInner.  # noqa: E501
        :rtype: PpoInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self) -> str:
        """Gets the _date of this PpoInner.


        :return: The _date of this PpoInner.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date: str):
        """Sets the _date of this PpoInner.


        :param _date: The _date of this PpoInner.
        :type _date: str
        """

        self.__date = _date

    @property
    def ppo(self) -> float:
        """Gets the ppo of this PpoInner.


        :return: The ppo of this PpoInner.
        :rtype: float
        """
        return self._ppo

    @ppo.setter
    def ppo(self, ppo: float):
        """Sets the ppo of this PpoInner.


        :param ppo: The ppo of this PpoInner.
        :type ppo: float
        """

        self._ppo = ppo

    @property
    def hist(self) -> float:
        """Gets the hist of this PpoInner.


        :return: The hist of this PpoInner.
        :rtype: float
        """
        return self._hist

    @hist.setter
    def hist(self, hist: float):
        """Sets the hist of this PpoInner.


        :param hist: The hist of this PpoInner.
        :type hist: float
        """

        self._hist = hist

    @property
    def sig(self) -> float:
        """Gets the sig of this PpoInner.


        :return: The sig of this PpoInner.
        :rtype: float
        """
        return self._sig

    @sig.setter
    def sig(self, sig: float):
        """Sets the sig of this PpoInner.


        :param sig: The sig of this PpoInner.
        :type sig: float
        """

        self._sig = sig
