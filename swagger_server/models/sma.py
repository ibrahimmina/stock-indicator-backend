# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Sma(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, _date: List[str]=None, close: List[float]=None, sma: List[float]=None):  # noqa: E501
        """Sma - a model defined in Swagger

        :param _date: The _date of this Sma.  # noqa: E501
        :type _date: List[str]
        :param close: The close of this Sma.  # noqa: E501
        :type close: List[float]
        :param sma: The sma of this Sma.  # noqa: E501
        :type sma: List[float]
        """
        self.swagger_types = {
            '_date': List[str],
            'close': List[float],
            'sma': List[float]
        }

        self.attribute_map = {
            '_date': 'Date',
            'close': 'Close',
            'sma': 'SMA'
        }
        self.__date = _date
        self._close = close
        self._sma = sma

    @classmethod
    def from_dict(cls, dikt) -> 'Sma':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The sma of this Sma.  # noqa: E501
        :rtype: Sma
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self) -> List[str]:
        """Gets the _date of this Sma.


        :return: The _date of this Sma.
        :rtype: List[str]
        """
        return self.__date

    @_date.setter
    def _date(self, _date: List[str]):
        """Sets the _date of this Sma.


        :param _date: The _date of this Sma.
        :type _date: List[str]
        """

        self.__date = _date

    @property
    def close(self) -> List[float]:
        """Gets the close of this Sma.


        :return: The close of this Sma.
        :rtype: List[float]
        """
        return self._close

    @close.setter
    def close(self, close: List[float]):
        """Sets the close of this Sma.


        :param close: The close of this Sma.
        :type close: List[float]
        """

        self._close = close

    @property
    def sma(self) -> List[float]:
        """Gets the sma of this Sma.


        :return: The sma of this Sma.
        :rtype: List[float]
        """
        return self._sma

    @sma.setter
    def sma(self, sma: List[float]):
        """Sets the sma of this Sma.


        :param sma: The sma of this Sma.
        :type sma: List[float]
        """

        self._sma = sma
